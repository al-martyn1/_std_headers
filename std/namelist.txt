# Headers list - https://en.cppreference.com/w/cpp/header

#namespace std

# Concepts library        
#   <concepts>               [X]  Fundamental library concepts

#include concepts.txt



# Coroutines library      
#   <coroutine>              [X]  Coroutine support library

#include coroutine.txt



# Utilities library
#   <cstdlib>                [X]  General purpose utilities: program control, dynamic memory allocation, random numbers, sort and search
#   <csignal>                [X]  Functions and macro constants for signal management
#   <csetjmp>                [X]  Macro (and function) that saves (and jumps) to an execution context
#   <cstdarg>                [X]  Handling of variable length argument lists
#   <typeinfo>               [X]  Runtime type information utilities
#   <typeindex>              [X]  std::type_index 
#   <type_traits>            [X]  Compile-time type information
#   <bitset>                 [X]  std::bitset class template
#   <functional>             [X]  Function objects, Function invocations, Bind operations and Reference wrappers
#   <utility>                [X]  Various utility components
#   <ctime>                  [X]  C-style time/date utilites
#   <chrono>                 [X]  C++ time utilites
#   <cstddef>                [X]  Standard macros and typedefs
#   <initializer_list>       [X]  std::initializer_list class template
#   <tuple>                  [X]  std::tuple class template
#   <any>                    [X]  std::any class
#   <optional>               [X]  std::optional class template
#   <variant>                [X]  std::variant class template
#   <compare>                [X]  Three-way comparison operator support
#   <version>                [X]  Supplies implementation-dependent library information
#   <source_location>        [X]  Supplies means to obtain source code location
#   <stacktrace>             [X]  Stacktrace library

#include cstdlib.txt
#include csignal.txt
#include csetjmp.txt
#include cstdarg.txt

type_info                    typeinfo
bad_typeid
bad_cast

type_index                   typeindex

#include type_traits.txt

bitset                       bitset

#include functional.txt
#include utility.txt
#include ctime.txt
#include cstddef.txt

initializer_list             initializer_list

#include tuple.txt

any                          any
bad_any_cast
make_any
any_cast


optional                     optional
bad_optional_access
nullopt_t
nullopt
make_optional

#include compare.txt
#include version.txt

source_location              source_location

stacktrace_entry             stacktrace
basic_stacktrace



# Dynamic memory management
#   <new>                    [X]  Low-level memory management utilities
#   <memory>                 [X]  High-level memory management utilities
#   <scoped_allocator>       [X]  Nested allocator class
#   <memory_resource>        [X]  Polymorphic allocators and memory resources

#include new.txt
#include memory.txt

scoped_allocator_adaptor     scoped_allocator

# include memory_resource.txt



# Numeric limits
#   <climits>                [X]  Limits of integral types
#   <cfloat>                 [X]  Limits of floating-point types
#   <cstdint>                [X]  Fixed-width integer types and limits of other types
#   <cinttypes>              [X]  Formatting macros, intmax_t and uintmax_t math and conversions
#   <limits>                 [X]  Uniform way to query properties of arithmetic types

#include climits.txt
#include cfloat.txt
#include cstdint.txt
#include cinttypes.txt

numeric_limits                     limits
float_round_style
float_denorm_style



# Error handling
#   <exception>              [X]  Exception handling utilities
#   <stdexcept>              [X]  Standard exception objects
#   <cassert>                [X]  Conditionally compiled macro that compares its argument to zero
#   <system_error>           [X]  Defines std::error_code, a platform-dependent error code
#   <cerrno>                 [X]  Macro containing the last error number

#include exception.txt
#include stdexcept.txt
#include cassert.txt
#include system_error.txt
#include cerrno.txt



# Strings library
#   <cctype>                 [X]  Functions to determine the category of narrow characters
#   <cwctype>                [X]  Functions to determine the catagory of wide characters
#   <cstring>                [X]  Various narrow character string handling functions
#   <cwchar>                 [X]  Various wide and multibyte string handling functions
#   <cuchar>                 [X]  C-style Unicode character conversion functions
#   <string>                 [X]  std::basic_string class template
#   <string_view>            [X]  std::basic_string_view class template
#   <charconv>               [X]  std::to_chars and std::from_chars
#   <format>                 [X]  Formatting library including std::format

#include cctype.txt
#include cwctype.txt
#include cstring.txt
#include cwchar.txt
#include cuchar.txt
#include string.txt

basic_string_view                      string_view
string_view
u8string_view
u16string_view
u32string_view
wstring_view

#include charconv.txt
#include format.txt



# Containers library
#   <array>                  [X]  std::array container
#   <vector>                 [X]  std::vector container
#   <deque>                  [X]  std::deque container
#   <list>                   [X]  std::list container
#   <forward_list>           [X]  std::forward_list container
#   <set>                    [X]  std::set and std::multiset associative containers
#   <map>                    [X]  std::map and std::multimap associative containers
#   <unordered_set>          [X]  std::unordered_set and std::unordered_multiset unordered associative containers
#   <unordered_map>          [X]  std::unordered_map and std::unordered_multimap unordered associative containers
#   <stack>                  [X]  std::stack container adaptor
#   <queue>                  [X]  std::queue and std::priority_queue container adaptors
#   <span>                   [X]  std::span view

array                        array
to_array

vector                       vector

deque                        deque

list                         list

forward_list                 forward_list

set                          set
multiset

map                          map
multimap

unordered_set                unordered_set
unordered_multiset

unordered_map                unordered_map
unordered_multimap

stack                        stack

queue                        queue
priority_queue

span                         span
dynamic_extent
as_bytes
as_writable_bytes
  


# Iterators library
#   <iterator>               [X]  Range iterators

#include iterator.txt



# Ranges library
#   <ranges>                 [X]  Range access, primitives, requirements, utilities and adaptors

# In separate namespace/subfolder



# Algorithms library
#   <algorithm>              [X]  Algorithms that operate on ranges

#include algorithm.txt



#   <execution>              [X]  Predefined execution policies for parallel versions of the algorithms

# In separate namespace/subfolder

is_execution_policy          execution
is_execution_policy_v



# Numerics library
#   <cmath>                  [X]  Common mathematics functions
#   <complex>                [X]  Complex number type
#   <valarray>               [X]  Class for representing and manipulating arrays of values
#   <random>                 [X]  Random number generators and distributions
#   <numeric>                [X]  Numeric operations on values in ranges
#   <ratio>                  [X]  Compile-time rational arithmetic
#   <cfenv>                  [X]  Floating-point environment access functions
#   <bit>                    [X]  Bit manipulation functions
#   <numbers>                [X]  Math constants

#include cmath.txt

complex                      complex
real
imag
arg
norm
conj
proj
polar

valarray                     valarray
slice
slice_array
gslice
gslice_array
mask_array
indirect_array

#include random.txt

iota                         numeric
accumulate
reduce
transform_reduce
inner_product
adjacent_difference
partial_sum
inclusive_scan
exclusive_scan
transform_inclusive_scan
transform_exclusive_scan
gcd
lcm
midpoint

#include ratio.txt
#include cfenv.txt

endian                       bit
bit_cast
has_single_bit
bit_ceil
bit_floor
bit_width
rotl
rotr
countl_zero
countl_one
countr_zero
countr_one
popcount

# include .txt
# include .txt
# include .txt
# include .txt
# include .txt
# include .txt
# include .txt


# Localization library
#   <locale>                 [ ]  Localization utilities
#   <clocale>                [ ]  C localization utilities
#   <codecvt>                [ ]  Unicode conversion facilities

# Input/output library
#   <iosfwd>                 [ ]  Forward declarations of all classes in the input/output library
#   <ios>                    [ ]  std::ios_base class, std::basic_ios class template and several typedefs
#   <istream>                [X]  std::basic_istream class template and several typedefs
#   <ostream>                [X]  std::basic_ostream, std::basic_iostream class templates and several typedefs
#   <iostream>               [X]  Several standard stream objects
#   <fstream>                [X]  std::basic_fstream, std::basic_ifstream, std::basic_ofstream class templates and several typedefs
#   <sstream>                [X]  std::basic_stringstream, std::basic_istringstream, std::basic_ostringstream class templates and several typedefs
#   <syncstream>             [ ]  std::basic_osyncstream, std::basic_syncbuf, and typedefs
#   <strstream>              [ ]  std::strstream, std::istrstream, std::ostrstream
#   <iomanip>                [X]  Helper functions to control the format of input and output
#   <streambuf>              [ ]  std::basic_streambuf class template
#   <cstdio>                 [ ]  C-style input-output functions

# include .txt
# include .txt
# include .txt
# include .txt
# include .txt
# include .txt
# include .txt


basic_istream                istream
istream
wistream
basic_iostream
iostream
wiostream

basic_ostream                ostream
ostream
wostream
endl
ends
flush
emit_on_flush
no_emit_on_flush
flush_emit

cin                          iostream
wcin
cout
wcout
cerr
wcerr
clog
wclog

ifstream                     fstream
wifstream
ofstream
wofstream
fstream
wfstream

istringstream                sstream
wistringstream
ostringstream
wostringstream
stringstream
wstringstream

resetiosflags                iomanip
setiosflags
setbase
setfill
setprecision
setw
get_money
put_money
get_time
put_time
quoted



# Filesystem library
#   <filesystem>             [ ]  std::path class and supporting functions

# Regular Expressions library
#   <regex>                  [ ]  Classes, algorithms and iterators to support regular expression processing

# Atomic Operations library
#   <atomic>                 [ ]  Atomic operations library

#include atomic.txt


# Thread support library
#   <thread>                 [ ]  std::thread class and supporting functions
#   <stop_token>             [ ]  Stop tokens for std::jthread
#   <mutex>                  [ ]  Mutual exclusion primitives
#   <shared_mutex>           [ ]  Shared mutual exclusion primitives
#   <future>                 [ ]  Primitives for asynchronous computations
#   <condition_variable>     [ ]  Thread waiting conditions
#   <semaphore>              [ ]  Semaphores
#   <latch>                  [ ]  Latches
#   <barrier>                [ ]  Barriers




